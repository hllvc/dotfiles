# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet __vf "Public bash function with (n)vim folding." b
	${1:name}() { #{{{
		$TM_SELECTED_TEXT
	}
	#}}}: $1

snippet __vpf "Private bash function with (n)vim folding." b
	_${1:name}() { #{{{
		$TM_SELECTED_TEXT
	}
	#}}}: _$1

snippet __vs "Visual section in bash script with (n)vim folding." b

	#{{{ ${1:section_title}
	$TM_SELECTED_TEXT
	#}}}: $1

snippet __f "Public bash function with (n)vim folding." b
	${1:name}() { #{{{
		${0:body}
	}
	#}}}: $1

snippet __pf "Private bash function with (n)vim folding." b
	_${1:name}() { #{{{
		${2:body}
	}
	#}}}: _$1

snippet __s "Visual section in bash script with (n)vim folding." b

	#{{{ ${1:section_title}
	${0:commands}
	#}}}: $1
